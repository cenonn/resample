.. _basic:

Basic Tutorial
===================================
Throughout this tutorial, we will be using the score dataset from Mardia, Kent,
and Bibby (1979) on 88 students who took examinations in five subjects. This is a
dataset that Efron has used in his book, *An Introduction to the Bootstrap*::

    import numpy as np
    import pandas as pd
    import resample as rs

    data = pd.read_csv("score.csv")
    data.head()

=== === === === ===
 
mec vec alg ana sta
 
=== === === === ===
77  82  67  67  81
63  78  80  70  81
75  73  71  66  81
55  72  63  70  68
63  63  65  70  63
=== === === === ===


boot()
-----------------------------------
The boot() function encompasses the actual bootstrap algorithm and is the
fundamental piece of the package. In order to perform a univariate 
bootstrap, a dataset and the estimator to be calculated are passed
into the function::
    
    bootstrap = rs.boot(data["mec"], np.var)

The boot function will then perform 10,000 boostrap simulations by 
default. This returns a UnivariateResults object.

A few things to note:

#. The dataset needs to be either an np.array, pd.Series, or univariate
   pd.DataFrame
#. The function passed can be any function, user-defined or otherwise, as long
   as it returns a single value. User-defined functions will be looked at more
   indepth in the Advanced Tutorial.


Results Objects
-----------------------------------
Results objects hold the results from all the boostrap simulations, the
estimator that was calculated, and the sample statistic. The primary use of
this object will usually be to calculate the standard error of our estimate::

    bootstrap.se()

It can also be used to plot a histogram of the bootstrap distribution::

    bootstrap.plot()

.. plot::

    import pandas as pd
    import numpy as np
    import resample as rs

    data = pd.read_csv("score.csv")
    bootstrap = rs.boot(data["mec"], np.var)
    bootstrap.plot()

These objects have more functionality beyond these two examples. See the 
:doc:`modules <../refs/modules>` for more information.



